const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./index.esm-DMahQkBZ.js","./Layout.stories-kDaxJsVg.js","./jsx-runtime-BTJTZTIL.js","./index-ChsGqxH_.js","./iframe-DyUDVaki.js","./index-CJ_LmFaV.js","./_commonjsHelpers-D6-XlEtG.js","./Card-oKz5vSZ3.js"])))=>i.map(i=>d[i]);
import{_ as y}from"./iframe-DyUDVaki.js";import"../sb-preview/runtime.js";async function f(r,n,s){const e=await y(()=>import("./index.esm-DMahQkBZ.js"),__vite__mapDeps([0,1,2,3,4,5,6,7]),import.meta.url),l=e.getStorage,i=e.ref,d=e.uploadBytesResumable,p=e.getDownloadURL,u=l(),g=`staging_uploads/${r}/${Date.now()}_${n.name}`,m=i(u,g),a=d(m,n);return{promise:new Promise((o,c)=>{a.on("state_changed",t=>{const _=t.totalBytes?Math.round(t.bytesTransferred/t.totalBytes*100):0;s&&s(_)},t=>{c(t)},async()=>{try{const t=await p(a.snapshot.ref);o(t)}catch(t){c(t)}})}),cancel:()=>{try{a.cancel&&a.cancel()}catch(o){console.warn("cancel not available",o)}}}}const h={uploadFileToStaging:f};export{h as default,f as uploadFileToStaging};
