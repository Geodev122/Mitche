import{a6 as v,a8 as g,au as o,ap as m,ac as p,ar as D,ao as d,as as u,an as E,ai as f,ah as k,am as B,at as S,a7 as C,al as b,aa as Q,ak as U}from"./Layout.stories-kDaxJsVg.js";import"./jsx-runtime-BTJTZTIL.js";import"./index-ChsGqxH_.js";import"./iframe-DyUDVaki.js";import"../sb-preview/runtime.js";import"./index-CJ_LmFaV.js";import"./_commonjsHelpers-D6-XlEtG.js";import"./Card-oKz5vSZ3.js";class q{async createConversation(r){try{return{success:!0,data:{id:(await v(g(o,"conversations"),{...r,createdAt:m(),updatedAt:m(),lastActivity:m(),isActive:!0,isArchived:!1})).id,...r,createdAt:new Date,updatedAt:new Date,lastActivity:new Date,isActive:!0,isArchived:!1}}}catch(e){return console.error("Error creating conversation:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}async updateConversation(r,e){try{const s=p(o,"conversations",r);return await D(s,{...e,updatedAt:m()}),{success:!0}}catch(s){return console.error("Error updating conversation:",s),{success:!1,error:s instanceof Error?s.message:"Unknown error"}}}async getUserConversations(r){try{const e=d(g(o,"conversations"),u("participants","array-contains",r),u("isActive","==",!0),E("lastActivity","desc"));return{success:!0,data:(await f(e)).docs.map(t=>({id:t.id,...t.data()}))}}catch(e){return console.error("Error getting user conversations:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}async getConversationById(r){try{const e=p(o,"conversations",r),s=await k(e);return s.exists()?{success:!0,data:{id:s.id,...s.data()}}:{success:!1,error:"Not found"}}catch(e){return console.error("Error fetching conversation by id:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}subscribeToMessages(r,e){try{const s=d(g(o,"messages"),u("conversationId","==",r),E("timestamp","asc"));return B(s,c=>{const t=c.docs.map(a=>({id:a.id,...a.data()}));e(t)})}catch(s){console.error("Error subscribing to messages:",s);return}}async sendMessage(r,e){try{return{success:!0,data:{id:(await v(g(o,"messages"),{...r,conversationId:e,timestamp:m(),createdAt:m(),updatedAt:m(),deliveryStatus:{status:"delivered",timestamp:m()}})).id,...r,conversationId:e,timestamp:new Date,createdAt:new Date,updatedAt:new Date}}}catch(s){return console.error("Error sending message:",s),{success:!1,error:s instanceof Error?s.message:"Unknown error"}}}async markMessagesAsRead(r,e){try{const s=d(g(o,"messages"),u("conversationId","==",r),u("senderId","!=",e)),c=await f(s),t=S(o);return c.docs.forEach(a=>{const n=a.ref;t.update(n,{[`readBy.${e}`]:m(),"deliveryStatus.status":"read","deliveryStatus.timestamp":m()})}),await t.commit(),{success:!0}}catch(s){return console.error("Error marking messages as read:",s),{success:!1,error:s instanceof Error?s.message:"Unknown error"}}}async addReaction(r,e,s){try{const c=p(o,"messages",r);return await D(c,{[`reactions.${s}`]:C(e),updatedAt:m()}),{success:!0}}catch(c){return console.error("Error adding reaction:",c),{success:!1,error:c instanceof Error?c.message:"Unknown error"}}}async searchRequests(r){try{let e=d(g(o,"requests"));if(r.type&&(e=d(e,u("type","==",r.type))),r.status&&(e=d(e,u("status","==",r.status))),r.urgency&&(e=d(e,u("urgency","==",r.urgency))),r.location&&(e=d(e,u("location",">=",r.location),u("location","<=",r.location+""))),r.sortBy){const t=r.sortOrder==="desc"?"desc":"asc";e=d(e,E(r.sortBy,t))}else e=d(e,E("createdAt","desc"));return r.limit&&(e=d(e,b(r.limit))),{success:!0,data:(await f(e)).docs.map(t=>({id:t.id,...t.data()}))}}catch(e){return console.error("Error searching requests:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}async searchOfferings(r){try{let e=d(g(o,"offerings"));if(r.type&&(e=d(e,u("type","==",r.type))),r.status&&(e=d(e,u("status","==",r.status))),r.location&&(e=d(e,u("location",">=",r.location),u("location","<=",r.location+""))),r.sortBy){const t=r.sortOrder==="desc"?"desc":"asc";e=d(e,E(r.sortBy,t))}else e=d(e,E("createdAt","desc"));return r.limit&&(e=d(e,b(r.limit))),{success:!0,data:(await f(e)).docs.map(t=>({id:t.id,...t.data()}))}}catch(e){return console.error("Error searching offerings:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}async addRating(r,e,s,c,t){try{const a={targetId:r,targetType:e,rating:s,review:c||"",userId:t||"anonymous",timestamp:m()};return await v(g(o,"ratings"),a),await this.updateAverageRating(r,e),{success:!0}}catch(a){return console.error("Error adding rating:",a),{success:!1,error:a instanceof Error?a.message:"Unknown error"}}}async updateAverageRating(r,e){try{const s=d(g(o,"ratings"),u("targetId","==",r),u("targetType","==",e)),t=(await f(s)).docs.map(a=>a.data().rating);if(t.length>0){const a=t.reduce((l,y)=>l+y,0)/t.length,n=t.length,h=e==="user"?"users":`${e}s`,i=p(o,h,r);await D(i,{"rating.average":a,"rating.count":n,updatedAt:m()})}}catch(s){console.error("Error updating average rating:",s)}}async recordAnalytics(r,e){try{const s={eventType:r,data:e,timestamp:m(),date:new Date().toISOString().split("T")[0]};return await v(g(o,"analytics"),s),{success:!0}}catch(s){return console.error("Error recording analytics:",s),{success:!1,error:s instanceof Error?s.message:"Unknown error"}}}async getAnalyticsSummary(r,e){try{const s=d(g(o,"analytics"),u("date",">=",r),u("date","<=",e)),t=(await f(s)).docs.map(n=>n.data()),a={totalEvents:t.length,eventsByType:{},dailyBreakdown:{}};return t.forEach(n=>{a.eventsByType[n.eventType]=(a.eventsByType[n.eventType]||0)+1,a.dailyBreakdown[n.date]=(a.dailyBreakdown[n.date]||0)+1}),{success:!0,data:a}}catch(s){return console.error("Error getting analytics summary:",s),{success:!1,error:s instanceof Error?s.message:"Unknown error"}}}async getDemoContent(){try{return{success:!0,data:(await f(g(o,"demo_content"))).docs.map(s=>({id:s.id,...s.data()}))}}catch(r){return console.error("Error fetching demo content:",r),{success:!1,error:r instanceof Error?r.message:"Unknown error"}}}async addDemoContent(r){try{return{success:!0,data:(await v(g(o,"demo_content"),{...r,createdAt:m()})).id}}catch(e){return console.error("Error adding demo content:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}async deleteDemoContent(r){try{return await Q(p(o,"demo_content",r)),{success:!0}}catch(e){return console.error("Error deleting demo content:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}async recordHopePoints(r,e,s,c,t,a=1){try{const n=Math.max(0,Math.floor(c*a)),h={actorId:r,receiverId:e,category:s,amount:n,reason:t||"",timestamp:m()};await v(g(o,"hope_ledger"),h);const i=p(o,"users",e);return await D(i,{hopePoints:U(n),[`hopePointsBreakdown.${s}`]:U(n),updatedAt:m()}),{success:!0}}catch(n){return console.error("Error recording hope points:",n),{success:!1,error:n instanceof Error?n.message:"Unknown error"}}}async getLeaderboard(r){try{let e=d(g(o,"hope_ledger")),t=(await f(e)).docs.map(i=>({id:i.id,...i.data()}));if(r!=null&&r.startDate||r!=null&&r.endDate){const i=r!=null&&r.startDate?new Date(r.startDate):new Date("1970-01-01"),l=r!=null&&r.endDate?new Date(r.endDate):new Date;t=t.filter(y=>{const A=y.timestamp&&y.timestamp.toDate?y.timestamp.toDate():y.timestamp?new Date(y.timestamp):null;return A?A>=i&&A<=l:!1})}const a={};t.forEach(i=>{const l=i.receiverId,y=Number(i.amount||0);a[l]=(a[l]||0)+y});const n=Object.entries(a).map(([i,l])=>({id:i,points:l}));if(r!=null&&r.role){const l=(await f(g(o,"users"))).docs.map(w=>({id:w.id,...w.data()})),y=new Set(l.filter(w=>w.role===r.role).map(w=>w.id));return{success:!0,data:n.filter(w=>y.has(w.id)).sort((w,R)=>R.points-w.points).slice(0,r.limit||100)}}return{success:!0,data:n.sort((i,l)=>l.points-i.points).slice(0,(r==null?void 0:r.limit)||100)}}catch(e){return console.error("Error getting leaderboard:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}async getPreaggregatedGlobal(){try{const r=p(o,"leaderboard_aggregates","global"),e=await k(r);if(!e.exists())return{success:!0,data:[]};const c=(e.data()||{}).totals||{};return{success:!0,data:Object.entries(c).map(([n,h])=>{const i=h||{};return{id:n,score:Number(i.score||0),rawPoints:Number(i.rawPoints||0),breakdown:i.breakdown||{},commendations:i.commendations||{}}}).sort((n,h)=>h.score-n.score)}}catch(r){return console.error("Error reading preaggregated global leaderboard:",r),{success:!1,error:r instanceof Error?r.message:"Unknown error"}}}}const j=new q;export{q as EnhancedFirebaseService,j as enhancedFirebaseService};
