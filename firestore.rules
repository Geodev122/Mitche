rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own documents
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && resource.data.role in ['Admin', 'Organization'];
    }
    
    // Public read access for community events, resources, and offerings
    match /communityEvents/{eventId} {
      allow read: if true;
      allow write: if request.auth != null && 
        (resource.data.createdBy == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Organization']);
    }
    
    match /resources/{resourceId} {
      allow read: if true;
      allow write: if request.auth != null && 
        (resource.data.createdBy == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Organization']);
    }
    
    match /offerings/{offeringId} {
      allow read: if true;
      allow write: if request.auth != null && 
        (resource.data.createdBy == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Organization']);
    }
    
    // Requests can be read by everyone, written by authenticated users
    match /requests/{requestId} {
      allow read: if true;
      allow write: if request.auth != null && 
        (resource.data.createdBy == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Organization']);
    }
    
    // Notifications can be read/written by the recipient
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        resource.data.recipientId == request.auth.uid;
    }
    
    // Tapestry threads can be read by everyone, written by authenticated users
    match /tapestryThreads/{threadId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Admin-only access for sensitive operations
    match /{document=**} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
  }
}